/*! \page runsimulation Run simulation

@startuml
actor User

== Simulation start up ==

User->Simulation: Run
note over Simulation: Connect events and [Link]s
note over Simulation : Call OnSimulationCommencing()\nmethod in each model

Simulation -> Clock: DoCommence

note over Clock: Clock then repeats daily time step for each day in weather file

== Simulation Clean up ==

note over Simulation : Call OnSimulationCompleted()\nmethod in each model
note over Simulation: Disconnect events and [Link]s

@enduml 


@startuml

' Declare some participants.
participant Simulation
participant Clock
participant  "Weather\nFile" as WeatherFile
participant Manager
participant "Soil\nWater" as SoilWater
participant "Soil\nNitrogen" as SoilNitrogen
participant "Surface\nOrganic\nMatter" as SurfaceOrganicMatter
participant Arbitrator
participant Plant
participant Report

== Repeat this section for each time step ==

Clock -> WeatherFile: DoWeather
note right: Weather reads in the day's weather

par2
    WeatherFile -> Manager: Preparing\nNewWeatherData
also
    WeatherFile -> SoilWater: P
also
    WeatherFile -> SoilNitrogen: P
also
    WeatherFile -> SurfaceOrganicMatter: P
also
    WeatherFile -> Arbitrator: P
also
    WeatherFile -> Plant: P
also
    WeatherFile -> Report: P
end

par2
    WeatherFile -> Manager: NewWeather\nDataAvailable
also
    WeatherFile -> SoilWater: N
also
    WeatherFile -> SoilNitrogen: N
also
    WeatherFile -> SurfaceOrganicMatter: N
also
    WeatherFile -> Arbitrator: N
also
    WeatherFile -> Plant: N
also
    WeatherFile -> Report: N
end



par2
    Clock -> WeatherFile: DoDailyInitialisation 
also
    Clock -> Manager: D
also
    Clock -> SoilWater: D
also
    Clock -> SoilNitrogen: D
also
    Clock -> SurfaceOrganicMatter: D
also
    Clock -> Arbitrator: D
also
    Clock -> Plant: D
also
    Clock -> Report: D
end

Clock -> Manager: DoManagement
note right: Manager/Operations determine management for day
group Energy Arbitration
Clock -> Arbitrator: DoEnergyArbitration
Arbitrator -> WeatherFile: get Weather
Arbitrator -> Plant: get States
Arbitrator -> SoilWater: get States
Arbitrator -> SoilNitrogen: get States
Arbitrator -> SurfaceOrganicMatter: get States
note over Arbitrator: Calculate:\nthe light profile\nsystem potential ET\nrainfall interception\npotential ET for each crop\npotential soilwater evap\nactual soil water evap
Arbitrator -> SoilWater: set RainfallInterception
Arbitrator -> SoilWater: set IrrigationInterception
Arbitrator -> Plant: set PotentialET
end

Clock -> SoilWater: DoSoilWaterMovement
note over SoilWater: Calculate water and solute movement and update

Clock -> SoilTemperature: DoSoilTemperatue

Clock -> SoilNitrogen: DoSoilNutrientDynamics
SoilNitrogen -> SoilTemperature: get SoilTemperature
SoilNitrogen -> SoilWater: get State
SoilNitrogen -> SurfaceOrganicMatter: get State
note over SoilNitrogen:Calculate:\n C,N,P transformations\npotential and actual surface organic matter decompostion\ndll delta values
SoilNitrogen -> SurfaceOrganicMatter: set DeltaSurfaceOrganicMatter

Clock -> SoilNitrogen: DoSoilOrganicMatter
SoilNitrogen ->SurfaceOrganicMatter: get\nPotentialDecomposition
SoilNitrogen ->SurfaceOrganicMatter: set\nActualDecomposition

Clock -> SurfaceOrganicMatter: DoSurfaceOrganicMatterDecomposition

group Water Arbitration
Clock -> Arbitrator: DoWaterArbitration
Arbitrator->SoilWater: get States
par2
    Arbitrator->Plant: set ActualET
also
    Arbitrator->SoilWater: set ActualET
end
Arbitrator->Plant: set LightProfile
end

Clock -> Plant: DoPlantPotentialGrowth
note over Plant: Calculate:\nwater-limited growth\nnitrogen demand
|||
|||
|||
|||
|||
|||
|||

group Nutrient Arbitration
Clock -> Arbitrator: DoNutrientArbitration
Arbitrator -> SoilNitrogen: get State
Arbitrator -> Plant: get NutrientDemand
note over Arbitrator:Calculate:\nActualNutrientSupply\nDeltaNutrient
Arbitrator -> Plant: set ActualNutrientSupply
Arbitrator -> SoilNitrogen: set DeltaNutrient
end

Clock -> Plant: DoActualPlantGrowth
note over Plant: Calculate detached material and all sorts of stuff
Plant -> SurfaceOrganicMatter: set DeltaFOM (for above ground)
Plant -> SoilNitrogen: set DeltaFOM (for roots)

Clock -> SoilNitrogen: DoUpdate
Clock -> Manager: DoManagementCalculations
note right: Manager can calculate variables based on states.
Clock -> Report: DoReport


@enduml 


*/
